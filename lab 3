#wersja z pętlą
# a = []
# for x in range(10):
#     a.append(x**2)
# print(a)
#
#
# b = []
# for y in range(6):
#     b.append(3**y)
# print(b)
#
# c = []
# for z in a:
#     if z %2==1:
#         c.append(z)
# print(c)

#wersja pyton comprehension

# a = [x**2 for x in range(10)]
# print(a)
#
# b = [3**i for i in range(6)]
# print(b)
#
# c = [x for x in a if x%2==1]
# print(c)

#Liczby parzyste z podanego wykresu
#wersja z pętlą

# liczby = [1,2,3,4,5,6,7,8,9,10]
# lista = []
#
# for i in liczby:
#     if i %2==0:
#         lista.append(i)
# print('Liczby parzyste uzyskane z wykorzystaniem pętli:')
# print(lista)
# print()

# werjsa z python comprehension

# liczby = [1,2,3,4,5,6,7,8,9,10]
# lista2 = [i for i in liczby if i %2==0]
# print(lista2)

# werjsa z zagnieżdzonymi pętlami
# lista = []
# for i in [1,2,3]:
#     for j in [4,5,6]:
#         lista.append((i,j))
# print(lista)

# wersja z python comprehension
# lista2 = [(i,j) for i in [1,2,3] for j in [4,5,6]]
# # print(lista2)

# Zmiana klucza w słowniku
# wersja z pętlą
# skroty = {"PZU":"Państwowy zakład ubeżpieczeń","ZUS":"Zakład ubezpieczeń społecznych","PKO":"Państwowa kasa oszczędności"}
# odwrocone = {}
#
# for key,value in skroty.items():
#     odwrocone[value] = key
# print(odwrocone)

# werjsa z python comprehension
# odwrocone2 = {value: key for key, value in skroty.items()}
# print(odwrocone2)

# funkcja obliczająca pierwsiatki z równania kwadratowego
# delta = b**2 - 4 * a * c
# if delta < 0
#     print("Brak pierwiastków")
#     return -1
# elif delta == 0
#     print('Jeden pierwiastek:')
#     x = (-b)/(2*a)
#     return x
# else:
#     print('Dwa pierwiastki')
#     x1 = (-b - math.sqrt(delta)/(2*a))
#     x2 = (-b + math.sqrt(delta)/(2*a))
#     return x1,x2
# print(row_kwadratowe(6,1,3))
# print(row_kwadratowe(1,2,1))
# print(row_kwadratowe(1,4,1))

# Definiujemy funckję z wartościami domyślnymi
# import math
#
# def dlugosc_odcinka(x1 = 0, y1 = 0, x2 = 0, y2 = 0):
#     return math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)

# wywołujemy funckje dla wartości domyślnych
# print(dlugosc_odcinka())

# print(dlugosc_odcinka(1,2,3,4))
# print(dlugosc_odcinka(2, 2, y2=2, x2=1))
# print(dlugosc_odcinka(y2=5,x1=2,y1=2,x2=6))
# print(dlugosc_odcinka(x2=5,y2=5))

# SYMBOL *
# def ciag(* liczby):
#     # jezeli nie ma argumentów to
#     if len(liczby)==0:
#         return 0
#     else:
#         suma = 0
#         # sumujemy elementy ciągu
#         for i in liczby:
#             suma +=i
#         #zwracamy wartość sumy
#         return suma
#
# print(ciag())
# print(ciag(1,2,3,4,5,6,7,8))

# DWIE GWIAZDKI **
# def to_lubie(** rzeczy):
#     for cos in rzeczy:
#         print('To jest ')
#         print(cos)
#         print('co lubie ')
#         print(rzeczy[cos])
# to_lubie(slodycze='czekolada', rozrywka=['gry','filmy'])

#? plik = open("__init__.py", "r")
#? znaki = plik.read(10)

# ZADANIE 1

# x = [1,2,3,4,5,6,7,8,9,10]
# A = [1-x for x in x]
# print(A)

# y = range(7)
# B = [4**i for i in y]
# print(B)
#
#
# C = [x for x in B if x %2==0]
# print(C)

# ZADANIE 2

listy1 = []
x = range(10)
for n in x:
    listy1.append(n)

print(listy1)


